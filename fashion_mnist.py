## -*- coding: utf-8 -*-
"""Fashion mnist.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MOztAfXcsXi83Q1tM9-leG3pZ0Lt1TVk
"""

import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.datasets import fashion_mnist



(x_train,y_train),(x_test,y_test)=fashion_mnist.load_data()
x_train = x_train / 255.0
x_test = x_test / 255.0

x_train=x_train.reshape(-1,28,28,1)
x_test=x_test.reshape(-1,28,28,1)

model = models.Sequential([
    layers.Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1),),
    layers.MaxPooling2D((2,2)),
    layers.Conv2D(64,(3,3),activation='relu'),
    layers.MaxPooling2D(2,2),
    layers.Flatten(),
    layers.Dense(128,activation='relu'),
    layers.Dropout(0.5),
    layers.Dense(10,activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
history=model.fit(x_train,y_train,epochs=10,validation_split=0.2)

test_loss,test_accuracy=model.evaluate(x_test,y_test)
print('\nTest accuracy:.4f')

plt.figure(figsize=(12,5))
plt.subplot(1,2,1)
plt.plot(history.history['accuracy'],label='Trainig accuracy',marker='o')
plt.plot(history.history['val_accuracy'],label='Validtion acccuracy',marker='o')
plt.title('Model Accuracy')
plt.xlabel('epoch')
plt.legend()
plt.grid(True)
plt.subplot(1,2,2)
plt.plot(history.history['loss'],label='Training loss',marker='o')
plt.plot(history.history['val_loss'],label='validtaion loss',marker='o')
plt.title('Modle Loss')
plt.xlabel('epoch')
plt.legend()
plt.grid(True)
plt.show()

class_names=['T-shirt/top','Trousers','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot']
predictions=model.predict(x_test)
def plot_image(index,prediction_array,true_label,img):
  true_label,img=true_label[index],img[index]
  predicted_label=np.argmax(prediction_array[index])
  plt.grid(False)
  plt.xticks([])
  plt.yticks([])
  plt.imshow(img.reshape(28,28), cmap=plt.cm.binary)
  color='blue' if predicted_label==true_label else 'red'
  plt.xlabel(f"Pred: {class_names[predicted_label]} \nTrue: {class_names[true_label]}", color=color)
plt.figure(figsize=(15, 5))
for i in range(10):
    plt.subplot(2, 5, i+1)
    plot_image(i, predictions, y_test, x_test)
plt.tight_layout()
plt.show()

model.save('fashion_mnist_model.h5')

from tensorflow.keras.models import load_model
model = load_model("fashion_mnist_model.h5")




import streamlit as st
from PIL import Image
from tensorflow.keras.models import load_model

model=('fashion_mnist_model.h5')

class_names=('T-shirt/top','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle boot')

st.title('Fashion Mnist Image Classifier')
st.write('Upload a 28x28 grayscale image,and the model will predict the clothing category')

uploaded_file=st.file_uploader('Choose an image...',type=['jpg','png','jpeg'])
if uploaded_file is not None:
  image = image.open(uploaded_file).convert('L').resize((28,28))
  st.image(caption='uploaded image(resize to 28x28)',width=150)
  img_array=np.array(image)/255.0
  img_array=img_array.reshape(1,28,28,-1)
  prediction=model.predict(img_array)
  predicted_class=class_names[np.argmax(prediction)]
  confidence=100*np.max(prediction)
  st.success(f"Fashion check complete: I believe this is a **{predicted_label}** - with {confidence:.2f}% confidence about that")

from google.colab import files
files.download("fashion_mnist_model.h5")
